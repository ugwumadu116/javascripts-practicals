 Write a JavaScript program to perform a binary search. Go to the editor
Note : A binary search or half-interval search algorithm finds the position of a specified input value within an array sorted by key value. 
Sample array : 
var items = [1, 2, 3, 4, 5, 7, 8, 9];
Expected Output : 
console.log(binary_Search(items, 1)); //0 
console.log(binary_Search(items, 5)); //4

////// SOLUTION/////////////////////////////
let items = [1, 2, 3, 4, 5, 7, 8, 9];
function binary_Search(arr, val){
	let k = arr.findIndex(steps => steps === val)
	console.log(k)
}
binary_Search(items, 9)

/////////////////////// OR  //////////////////////////////////
function binary_Search(items, value){
    let firstIndex  = 0;
    let lastIndex   = items.length - 1;
    let middleIndex = Math.floor((lastIndex + firstIndex)/2);

    while(items[middleIndex] != value && firstIndex < lastIndex)
    {
       if (value < items[middleIndex])
        {
            lastIndex = middleIndex - 1;
        }
      else if (value > items[middleIndex])
        {
            firstIndex = middleIndex + 1;
        }
        middleIndex = Math.floor((lastIndex + firstIndex)/2);
    }

    return (items[middleIndex] != value) ? -1 : middleIndex;
}
const items = [1, 2, 3, 4, 5, 7, 8, 9];
console.log(binary_Search(items, 1));
console.log(binary_Search(items, 5));
